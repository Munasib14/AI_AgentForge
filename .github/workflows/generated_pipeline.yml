name: .NET Core
on:
  push:
    branches:
    - main
jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Create dummy .NET project
      run: "mkdir dotnet-demo
mkdir dotnet-demo/DemoProject
echo '<Project Sdk=\" \
Microsoft.NET.Sdk\">
<PropertyGroup>
<OutputType>Exe</OutputType>
 \
\    <TargetFramework>net6.0</TargetFramework>
</PropertyGroup>
</Project>' \
\ > dotnet-demo/DemoProject/DemoProject.csproj
echo 'using System; class \
\ Program { static void Main() => Console.WriteLine(\"Hello, World!\"); }' \
\ > dotnet-demo/DemoProject/Program.cs
"
    - name: Install dotnet-sonarscanner
      run: dotnet tool install -g dotnet-sonarscanner
    - name: SonarQube begin
      env:
        SONAR_TOKEN: $SONAR_TOKEN
        SONAR_HOST_URL: $SONAR_HOST_URL
        SONAR_PROJECT_KEY: DummyProjectKey
        SONAR_PROJECT_NAME: DummyProjectName
      run: 'dotnet sonarscanner begin /k:"DummyProjectKey" /n:"DummyProjectName" /d:sonar.host.url=$SONAR_HOST_URL
        /d:sonar.login=$SONAR_TOKEN /d:sonar.exclusions="**/bin/**,**/obj/**" /d:sonar.cs.opencover.reportsPaths=dotnet-demo/**/coverage.opencover.xml

        '
    - name: Restore
      run: dotnet restore dotnet-demo/DemoProject/DemoProject.csproj
    - name: Build
      run: dotnet build dotnet-demo/DemoProject/DemoProject.csproj --configuration
        Release
    - name: Test with coverage
      run: dotnet test dotnet-demo/DemoProject/DemoProject.csproj --configuration
        Release --collect:"XPlat Code Coverage"
    - name: SonarQube end
      env:
        SONAR_TOKEN: $SONAR_TOKEN
      run: dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"
